{"ast":null,"code":"var _jsxFileName = \"/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    blogId,\n    commenterName\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    id\n  } = useParams();\n\n  const fetchComments = () => {\n    axios.get(`http://localhost:3000/api/comments/${id}`).then(response => {\n      console.log('fetch comments response:', response);\n      setComments(response.data.data);\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [newComment]);\n\n  const postComment = () => {\n    if (!newComment) return;\n    const requestBody = {\n      blogid: blogId.toString(),\n      commentername: commenterName.toString(),\n      desc: newComment\n    };\n    axios.post(`http://localhost:3000/api/comments/`, requestBody, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"Post comment response :\", response);\n      fetchComments();\n      setNewComment(\"\");\n    }).catch(error => {\n      console.error(\"Error posting comment:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800 font-semibold\",\n          children: comment.commentername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800\",\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:border-indigo-500\",\n        placeholder: \"Write your comment...\",\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postComment,\n        className: \"mt-2 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 focus:outline-none\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentSection, \"oUljtnboZ3klnYM44KQ1WtTSXZQ=\", false, function () {\n  return [useParams];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/CommentSection.jsx"],"names":["React","useState","useEffect","axios","useParams","CommentSection","blogId","commenterName","comments","setComments","newComment","setNewComment","id","fetchComments","get","then","response","console","log","data","catch","error","postComment","requestBody","blogid","toString","commentername","desc","post","withCredentials","map","comment","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nconst CommentSection = ({ blogId, commenterName }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const { id } = useParams();\n  const fetchComments = () => {\n    axios\n      .get(`http://localhost:3000/api/comments/${id}`)\n      .then((response) => {\n        console.log('fetch comments response:', response)\n        setComments(response.data.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching comments:\", error);\n      });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [newComment]);\n\n  const postComment = () => {\n    if (!newComment) return;\n    const requestBody = {\n        blogid: blogId.toString(),\n        commentername: commenterName.toString(),\n        desc: newComment,\n      };\n    axios\n      .post(`http://localhost:3000/api/comments/`, requestBody,{\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"Post comment response :\",response)\n        fetchComments();\n        setNewComment(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting comment:\", error);\n      });\n  };\n\n  return (\n    <div className=\"mt-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Comments</h2>\n      <div className=\"space-y-4\">\n        {comments.map((comment) => (\n          <div key={comment.id} className=\"bg-gray-100 p-4 rounded-lg shadow\">\n            <p className=\"text-gray-800 font-semibold\">{comment.commentername}</p>\n            <p className=\"text-gray-800\">{comment.desc}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-4\">\n        <textarea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:border-indigo-500\"\n          placeholder=\"Write your comment...\"\n          rows=\"4\"\n        ></textarea>\n        <button\n          onClick={postComment}\n          className=\"mt-2 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 focus:outline-none\"\n        >\n          Post Comment\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}