{"ast":null,"code":"var _jsxFileName = \"/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/EditPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = () => {\n  _s();\n\n  const [singlePost, setSinglePost] = useState();\n  const [loading, setLoading] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const options = {\n    position: \"bottom-right\",\n    style: {\n      backgroundColor: \"gray\",\n      border: \"2px solid lightgreen\",\n      color: \"white\",\n      fontFamily: \"Menlo, monospace\",\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    },\n    closeStyle: {\n      color: \"lightcoral\",\n      fontSize: \"16px\"\n    }\n  };\n  const [openSnackbar] = useSnackbar(options);\n\n  const singleBlog = () => {\n    axios.get(`http://localhost:3000/api/allpost/${id}`, //{},\n    {\n      withCredentials: true\n    }).then(function (response) {\n      var _response$data, _response$data2;\n\n      //setLoading(false);\n      //setBlogData(response?.data?.data);\n      setSinglePost(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data);\n      console.log(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data);\n    }).catch(function (error) {\n      // handle error\n      //setLoading(false);\n      //   setMessage(error?.response?.data?.message);\n      //   openSnackbar(error?.response?.data?.message);\n      console.log(error);\n    }).then(function () {// always executed\n    });\n  };\n\n  useEffect(() => {\n    const User = localStorage.getItem(\"user\");\n\n    if (!User) {\n      navigate(\"/login\");\n    }\n\n    singleBlog();\n  }, []);\n\n  const onSubmit = data => {\n    setLoading(true);\n    const body = { ...data,\n      image: singleBlog === null || singleBlog === void 0 ? void 0 : singleBlog.image\n    };\n    axios.put(`http://localhost:3000/api/updatepost/${id}`, { ...body\n    }, {\n      withCredentials: true\n    }).then(function (response) {\n      //console.log(response?.data);\n      openSnackbar(\"Post Updated Successfully\");\n      setLoading(false);\n      navigate(\"/personal\");\n    }).catch(function (error) {\n      openSnackbar(\"Oops!, Post is not updated\");\n      setLoading(false); // handle error\n      //setLoading(false);\n      //   setMessage(error?.response?.data?.message);\n      //\n      //console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen-md mx-auto p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-full\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -mx-3 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full md:w-full px-3 mb-6 md:mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\",\n            id: \"grid-first-name\",\n            type: \"text\",\n            placeholder: \"title\",\n            name: \"title\",\n            autoComplete: \"off\",\n            defaultValue: singlePost === null || singlePost === void 0 ? void 0 : singlePost.title,\n            ...register(\"title\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), errors.title && errors.title.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs italic\",\n            children: \"Please fill out this field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -mx-3 items-center lg:items-start mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-3\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            title: \"click to select a picture\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/*\",\n              className: \"hidden\",\n              id: \"banner\",\n              type: \"file\",\n              name: \"image\" //onChange={handleImage}\n              ,\n              visibility: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pb-2\",\n                children: \"Upload Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), image || singlePost ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"-object-contain -mt-8 p-5 w-1/2\",\n                    src: image ? image.image : singlePost === null || singlePost === void 0 ? void 0 : singlePost.image,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pb-5\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/upload-image.svg\",\n                  style: {\n                    background: \"#EFEFEF\"\n                  },\n                  className: \"h-full w-48\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-cente px-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"shadow bg-indigo-600 hover:bg-indigo-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-6 rounded\" // type=\"submit\"\n            //onClick={uploadImage}\n            ,\n            children: \"upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -mx-3 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-password\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"10\",\n            name: \"desc\",\n            defaultValue: singlePost === null || singlePost === void 0 ? void 0 : singlePost.desc,\n            className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n            ...register(\"desc\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), errors.desc && errors.desc.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-xs italic\",\n            children: \"Please fill out this field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between w-full px-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"shadow bg-indigo-600 hover:bg-indigo-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-6 rounded\",\n            type: \"submit\",\n            children: loading ? \"Loading\" : \" Update Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"hjcCY4IKw+vgV/QIMWa8naO07yk=\", false, function () {\n  return [useParams, useNavigate, useForm, useSnackbar];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/EditPost.jsx"],"names":["React","useState","useEffect","axios","useForm","useParams","useNavigate","useSnackbar","EditPost","singlePost","setSinglePost","loading","setLoading","id","navigate","image","setImage","register","handleSubmit","watch","formState","errors","options","position","style","backgroundColor","border","color","fontFamily","fontSize","textAlign","closeStyle","openSnackbar","singleBlog","get","withCredentials","then","response","data","console","log","catch","error","User","localStorage","getItem","onSubmit","body","put","title","required","type","background","desc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nconst EditPost = () => {\n  const [singlePost, setSinglePost] = useState();\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [image, setImage] = useState();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const options = {\n    position: \"bottom-right\",\n    style: {\n      backgroundColor: \"gray\",\n      border: \"2px solid lightgreen\",\n      color: \"white\",\n      fontFamily: \"Menlo, monospace\",\n      fontSize: \"20px\",\n      textAlign: \"center\",\n    },\n    closeStyle: {\n      color: \"lightcoral\",\n      fontSize: \"16px\",\n    },\n  };\n  const [openSnackbar] = useSnackbar(options);\n  const singleBlog = () => {\n    axios\n      .get(\n        `http://localhost:3000/api/allpost/${id}`,\n        //{},\n        {\n          withCredentials: true,\n        }\n      )\n      .then(function (response) {\n        //setLoading(false);\n        //setBlogData(response?.data?.data);\n        setSinglePost(response?.data?.data);\n        console.log(response?.data?.data);\n      })\n      .catch(function (error) {\n        // handle error\n        //setLoading(false);\n        //   setMessage(error?.response?.data?.message);\n        //   openSnackbar(error?.response?.data?.message);\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n\n  useEffect(() => {\n    const User = localStorage.getItem(\"user\");\n\n    if (!User) {\n      navigate(\"/login\");\n    }\n    singleBlog();\n  }, []);\n\n  const onSubmit = (data) => {\n    setLoading(true);\n    const body = {\n      ...data,\n      image: singleBlog?.image,\n    };\n    axios\n      .put(\n        `http://localhost:3000/api/updatepost/${id}`,\n        { ...body },\n        {\n          withCredentials: true,\n        }\n      )\n      .then(function (response) {\n        //console.log(response?.data);\n        openSnackbar(\"Post Updated Successfully\");\n        setLoading(false);\n        navigate(\"/personal\");\n      })\n      .catch(function (error) {\n        openSnackbar(\"Oops!, Post is not updated\");\n        setLoading(false);\n\n        // handle error\n        //setLoading(false);\n        //   setMessage(error?.response?.data?.message);\n        //\n        //console.log(error);\n      });\n  };\n  return (\n    <div className=\"max-w-screen-md mx-auto p-5\">\n      <form className=\"w-full\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full md:w-full px-3 mb-6 md:mb-0\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Title\n            </label>\n            <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n              id=\"grid-first-name\"\n              type=\"text\"\n              placeholder=\"title\"\n              name=\"title\"\n              autoComplete=\"off\"\n              defaultValue={singlePost?.title}\n              {...register(\"title\", {\n                required: true,\n              })}\n            />\n            {errors.title && errors.title.type === \"required\" && (\n              <p className=\"text-red-500 text-xs italic\">\n                Please fill out this field.\n              </p>\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 items-center lg:items-start mb-6\">\n          <div className=\"w-full px-3\">\n            <label title=\"click to select a picture\">\n              <input\n                accept=\"image/*\"\n                className=\"hidden\"\n                id=\"banner\"\n                type=\"file\"\n                name=\"image\"\n                //onChange={handleImage}\n                visibility=\"hidden\"\n              />\n              <div className=\"flex flex-col\">\n                <div className=\"pb-2\">Upload Image</div>\n\n                {image || singlePost ? (\n                  <div className=\"pt-4\">\n                    <div>\n                      <img\n                        className=\"-object-contain -mt-8 p-5 w-1/2\"\n                        src={image ? image.image : singlePost?.image}\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"pb-5\">\n                    <img\n                      src=\"/upload-image.svg\"\n                      style={{ background: \"#EFEFEF\" }}\n                      className=\"h-full w-48\"\n                    />\n                  </div>\n                )}\n              </div>\n            </label>\n            {/* <input\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-email\"\n              type=\"file\"\n              name=\"image\"\n              onChange={handleImage}\n            /> */}\n          </div>\n          <div className=\"flex items-center justify-cente px-5\">\n            <button\n              className=\"shadow bg-indigo-600 hover:bg-indigo-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-6 rounded\"\n              // type=\"submit\"\n              //onClick={uploadImage}\n            >\n              upload image\n            </button>\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-password\"\n            >\n              Description\n            </label>\n            <textarea\n              rows=\"10\"\n              name=\"desc\"\n              defaultValue={singlePost?.desc}\n              className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              {...register(\"desc\", {\n                required: true,\n              })}\n            ></textarea>\n            {errors.desc && errors.desc.type === \"required\" && (\n              <p className=\"text-red-500 text-xs italic\">\n                Please fill out this field.\n              </p>\n            )}\n          </div>\n          <div className=\"flex justify-between w-full px-3\">\n            <button\n              className=\"shadow bg-indigo-600 hover:bg-indigo-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-6 rounded\"\n              type=\"submit\"\n            >\n              {loading ? \"Loading\" : \" Update Post\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default EditPost;\n"]},"metadata":{},"sourceType":"module"}