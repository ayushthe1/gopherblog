{"ast":null,"code":"var _jsxFileName = \"/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    blogId,\n    userId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const fetchComments = () => {\n    axios.get(`http://localhost:3000/comments/${blogId}`).then(response => {\n      setComments(response.data.comments);\n    }).catch(error => {\n      console.error(\"Error fetching comments:\", error);\n    });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [blogId]);\n\n  const postComment = () => {\n    if (!newComment) return;\n    const requestBody = {\n      blogid: blogId,\n      userId: userId,\n      desc: newComment\n    };\n    axios.post(`http://localhost:3000/comments/`, {\n      withCredentials: true,\n      comment: requestBody\n    }).then(response => {\n      console.log(\"Post comment response :\", response);\n      fetchComments();\n      setNewComment(\"\");\n    }).catch(error => {\n      console.error(\"Error posting comment:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-4 rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-800\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:border-indigo-500\",\n        placeholder: \"Write your comment...\",\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postComment,\n        className: \"mt-2 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 focus:outline-none\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentSection, \"+OVXuOcjEFRN/kXBrT9MF+duWSc=\");\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/CommentSection.jsx"],"names":["React","useState","useEffect","axios","CommentSection","blogId","userId","comments","setComments","newComment","setNewComment","fetchComments","get","then","response","data","catch","error","console","postComment","requestBody","blogid","desc","post","withCredentials","comment","log","map","content","id","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAuB;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAC1BR,IAAAA,KAAK,CACFS,GADH,CACQ,kCAAiCP,MAAO,EADhD,EAEGQ,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAT,CAAcR,QAAf,CAAX;AACD,KAJH,EAKGS,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD,KAPH;AAQD,GATD;;AAWAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACN,MAAD,CAFM,CAAT;;AAIA,QAAMc,WAAW,GAAG,MAAM;AACxB,QAAI,CAACV,UAAL,EAAiB;AACjB,UAAMW,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAEhB,MADQ;AAEhBC,MAAAA,MAAM,EAAEA,MAFQ;AAGhBgB,MAAAA,IAAI,EAAEb;AAHU,KAApB;AAKAN,IAAAA,KAAK,CACFoB,IADH,CACS,iCADT,EAC2C;AACvCC,MAAAA,eAAe,EAAE,IADsB;AAEvCC,MAAAA,OAAO,EAAEL;AAF8B,KAD3C,EAKGP,IALH,CAKSC,QAAD,IAAc;AAClBI,MAAAA,OAAO,CAACQ,GAAR,CAAY,yBAAZ,EAAsCZ,QAAtC;AACAH,MAAAA,aAAa;AACbD,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KATH,EAUGM,KAVH,CAUUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD,KAZH;AAaD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGV,QAAQ,CAACoB,GAAT,CAAcF,OAAD,iBACZ;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,oBAA8BA,OAAO,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,SAAUH,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,KAAK,EAAEpB,UADT;AAEE,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAGE,QAAA,SAAS,EAAC,4FAHZ;AAIE,QAAA,WAAW,EAAC,uBAJd;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,OAAO,EAAEb,WADX;AAEE,QAAA,SAAS,EAAC,wFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApED;;GAAMf,c;;KAAAA,c;AAsEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CommentSection = ({ blogId, userId }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  const fetchComments = () => {\n    axios\n      .get(`http://localhost:3000/comments/${blogId}`)\n      .then((response) => {\n        setComments(response.data.comments);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching comments:\", error);\n      });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, [blogId]);\n\n  const postComment = () => {\n    if (!newComment) return;\n    const requestBody = {\n        blogid: blogId,\n        userId: userId,\n        desc: newComment,\n      };\n    axios\n      .post(`http://localhost:3000/comments/`, {\n        withCredentials: true,\n        comment: requestBody,\n      })\n      .then((response) => {\n        console.log(\"Post comment response :\",response)\n        fetchComments();\n        setNewComment(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting comment:\", error);\n      });\n  };\n\n  return (\n    <div className=\"mt-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Comments</h2>\n      <div className=\"space-y-4\">\n        {comments.map((comment) => (\n          <div key={comment.id} className=\"bg-gray-100 p-4 rounded\">\n            <p className=\"text-gray-800\">{comment.content}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-4\">\n        <textarea\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:border-indigo-500\"\n          placeholder=\"Write your comment...\"\n          rows=\"4\"\n        ></textarea>\n        <button\n          onClick={postComment}\n          className=\"mt-2 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-500 focus:outline-none\"\n        >\n          Post Comment\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}