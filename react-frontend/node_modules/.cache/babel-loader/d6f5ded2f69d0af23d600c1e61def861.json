{"ast":null,"code":"var _jsxFileName = \"/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [message, setMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const options = {\n    position: \"bottom-right\",\n    style: {\n      backgroundColor: \"gray\",\n      border: \"2px solid lightgreen\",\n      color: \"white\",\n      fontFamily: \"Menlo, monospace\",\n      fontSize: \"20px\",\n      textAlign: \"center\"\n    },\n    closeStyle: {\n      color: \"lightcoral\",\n      fontSize: \"16px\"\n    }\n  };\n  const [openSnackbar] = useSnackbar(options);\n\n  const onSubmit = data => {\n    setLoading(true);\n    const body = { ...data //phone: parseInt(data.phone),\n\n    };\n    axios.post(`http://localhost:3000/api/register`, { ...body\n    }).then(function (response) {\n      var _response$data, _response$data2, _response$data3, _response$data4;\n\n      // handle success\n      setLoading(false);\n      setMessage(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      openSnackbar(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n      localStorage.setItem(\"user\", JSON.stringify(response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.user));\n      console.log(\"Setting in local storage n signup\", response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.message);\n      navigate(\"/\");\n    }).catch(function (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n\n      // handle error\n      setLoading(false);\n      setMessage(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n      openSnackbar(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message); //console.log(error?.response?.data?.message);\n    }).then(function () {// always executed\n    }); //console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-cyan-500 to-blue-500 min-h-screen flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white w-96 border border-gray-200 rounded-md p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-[#0c2650] text-2xl font-bold mb-4\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-fuchsia-400 via-sky-400 to-violet-200 text-white font-bold rounded p-2 mb-4\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"first_name\",\n            className: \"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\",\n            placeholder: \"Enter your First Name\",\n            autoComplete: \"on\",\n            ...register(\"first_name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), errors.first_name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 text-[10px] italic\",\n            children: \"First Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"last_name\",\n            className: \"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\",\n            placeholder: \"Enter your Last Name\",\n            autoComplete: \"on\",\n            ...register(\"last_name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 text-[10px] italic\",\n            children: \"Last Name is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: \"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\",\n            placeholder: \"Enter your Email Address\",\n            autoComplete: \"on\",\n            ...register(\"email\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 text-[10px] italic\",\n            children: \"Email is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: \"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\",\n            placeholder: \"Enter your Password\",\n            autoComplete: \"on\",\n            ...register(\"password\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 text-[10px] italic\",\n            children: \"Password is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm mb-1\",\n            children: \"Phone No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            className: \"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\",\n            placeholder: \"Enter your Phone Number\",\n            autoComplete: \"on\",\n            ...register(\"phone\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 text-[10px] italic\",\n            children: \"Phone No is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `w-full mt-6 px-4 py-2 bg-blue-500 text-white font-bold rounded hover:bg-blue-700 focus:outline-none`,\n          disabled: loading,\n          children: loading ? \"Loading...\" : \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-sm mt-4\",\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"text-blue-500\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"z3oAlhfHvr6qwsIewBtdAuf82a0=\", false, function () {\n  return [useNavigate, useForm, useSnackbar];\n});\n\n_c = Register;\nexport default Register; //   return (\n//     <div className=\"bg-gradient-to-r min-h-screen lg:min-h-screen  from-cyan-500 to-blue-500\">\n//       <div className=\"flex justify-center py-10 \">\n//         <div className=\"bg-white w-96 h-auto border border-gray-200 rounded-md\">\n//           <h1 className=\"text-center pt-4 text-[#0c2650] text-lg font-bold\">\n//             Sign up\n//           </h1>\n//           {message && (\n//             <div className=\"px-11 py-4\">\n//               <div className=\"font-bold bg-gradient-to-r from-fuchsia-400 via-sky-400 to-violet-200 p-4  text-center text-white \">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n//           <div className=\"pl-8\">\n//             <form onSubmit={handleSubmit(onSubmit)}>\n//               <div className=\"text-sm\">First Name</div>\n//               <div class=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span class=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <svg\n//                     fill=\"none\"\n//                     stroke=\"currentColor\"\n//                     stroke-linecap=\"round\"\n//                     stroke-linejoin=\"round\"\n//                     stroke-width=\"2\"\n//                     viewBox=\"0 0 24 24\"\n//                     className=\"w-4 h-4\"\n//                   >\n//                     <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                   </svg>\n//                 </span>\n//                 <input\n//                   type=\"text\"\n//                   name=\"first_name\"\n//                   class=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your first name\"\n//                   autoComplete=\"on\"\n//                   {...register(\"first_name\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.first_name && errors.first_name.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       First Name is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Last Name:</div>\n//               <div class=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span class=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"text\"\n//                   name=\"last_name\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your last name\"\n//                   autoComplete=\"on\"\n//                   {...register(\"last_name\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.last_name && errors.last_name.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Last Name is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Email:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your Email Address\"\n//                   autoComplete=\"on\"\n//                   {...register(\"email\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.email && errors.email.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Email is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Password:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       class=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your password\"\n//                   autoComplete=\"on\"\n//                   {...register(\"password\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.password && errors.password.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Password is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Phone No:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"number\"\n//                   name=\"phone\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your phone number\"\n//                   autoComplete=\"on\"\n//                   {...register(\"phone\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.phone && errors.phone.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Phone No is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"py-6 px-6\">\n//                 <button\n//                   className={`w-full ${\n//                     loading ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-blue-700 \"\n//                   } text-white font-bold py-2 px-4 rounded`}\n//                   disabled={loading ? true : false}\n//                 >\n//                   {loading ? \"Loading...\" : \"Sign up\"}\n//                 </button>\n//                 <div className=\"text-center text-sm pt-1\">\n//                   Already have an account? <Link to=\"login\">Login</Link>\n//                 </div>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/ayush007/Desktop/go-projects/go-blog-tut/reactlogin/src/components/register.jsx"],"names":["React","useEffect","useState","useForm","axios","useSnackbar","Link","useNavigate","Register","message","setMessage","loading","setLoading","navigate","register","handleSubmit","watch","formState","errors","options","position","style","backgroundColor","border","color","fontFamily","fontSize","textAlign","closeStyle","openSnackbar","onSubmit","data","body","post","then","response","localStorage","setItem","JSON","stringify","user","console","log","catch","error","required","first_name","last_name","email","password","phone"],"mappings":"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":["import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n  const [message, setMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const options = {\n    position: \"bottom-right\",\n    style: {\n      backgroundColor: \"gray\",\n      border: \"2px solid lightgreen\",\n      color: \"white\",\n      fontFamily: \"Menlo, monospace\",\n      fontSize: \"20px\",\n      textAlign: \"center\",\n    },\n    closeStyle: {\n      color: \"lightcoral\",\n      fontSize: \"16px\",\n    },\n  };\n  const [openSnackbar] = useSnackbar(options);\n  const onSubmit = (data) => {\n    setLoading(true);\n    const body = {\n      ...data,\n      //phone: parseInt(data.phone),\n    };\n    axios\n      .post(`http://localhost:3000/api/register`, { ...body })\n      .then(function (response) {\n        // handle success\n        setLoading(false);\n        setMessage(response?.data?.message);\n        openSnackbar(response?.data?.message);\n        localStorage.setItem(\"user\", JSON.stringify(response?.data?.user));\n        console.log(\"Setting in local storage n signup\" ,response?.data?.message);\n        navigate(\"/\");\n      })\n      .catch(function (error) {\n        // handle error\n        setLoading(false);\n        setMessage(error?.response?.data?.message);\n        openSnackbar(error?.response?.data?.message);\n        //console.log(error?.response?.data?.message);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    //console.log(data);\n  };\n  return (\n    <div className=\"bg-gradient-to-r from-cyan-500 to-blue-500 min-h-screen flex justify-center items-center\">\n      <div className=\"bg-white w-96 border border-gray-200 rounded-md p-8\">\n        <h1 className=\"text-center text-[#0c2650] text-2xl font-bold mb-4\">\n          Sign up\n        </h1>\n        {message && (\n          <div className=\"bg-gradient-to-r from-fuchsia-400 via-sky-400 to-violet-200 text-white font-bold rounded p-2 mb-4\">\n            {message}\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">First Name:</label>\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              className=\"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\"\n              placeholder=\"Enter your First Name\"\n              autoComplete=\"on\"\n              {...register(\"first_name\", { required: true })}\n            />\n            {errors.first_name && (\n              <span className=\"text-red-600 text-[10px] italic\">\n                First Name is required\n              </span>\n            )}\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Last Name:</label>\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              className=\"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\"\n              placeholder=\"Enter your Last Name\"\n              autoComplete=\"on\"\n              {...register(\"last_name\", { required: true })}\n            />\n            {errors.last_name && (\n              <span className=\"text-red-600 text-[10px] italic\">\n                Last Name is required\n              </span>\n            )}\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\"\n              placeholder=\"Enter your Email Address\"\n              autoComplete=\"on\"\n              {...register(\"email\", { required: true })}\n            />\n            {errors.email && (\n              <span className=\"text-red-600 text-[10px] italic\">\n                Email is required\n              </span>\n            )}\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\"\n              placeholder=\"Enter your Password\"\n              autoComplete=\"on\"\n              {...register(\"password\", { required: true })}\n            />\n            {errors.password && (\n              <span className=\"text-red-600 text-[10px] italic\">\n                Password is required\n              </span>\n            )}\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Phone No:</label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              className=\"w-full px-3 py-2 border-b-2 text-sm rounded focus:outline-none focus:border-blue-500\"\n              placeholder=\"Enter your Phone Number\"\n              autoComplete=\"on\"\n              {...register(\"phone\", { required: true })}\n            />\n            {errors.phone && (\n              <span className=\"text-red-600 text-[10px] italic\">\n                Phone No is required\n              </span>\n            )}\n          </div>\n          <button\n            className={`w-full mt-6 px-4 py-2 bg-blue-500 text-white font-bold rounded hover:bg-blue-700 focus:outline-none`}\n            disabled={loading}\n          >\n            {loading ? \"Loading...\" : \"Sign up\"}\n          </button>\n          <div className=\"text-center text-sm mt-4\">\n            Already have an account?{\" \"}\n            <Link to=\"/login\" className=\"text-blue-500\">\n              Login\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n//   return (\n//     <div className=\"bg-gradient-to-r min-h-screen lg:min-h-screen  from-cyan-500 to-blue-500\">\n//       <div className=\"flex justify-center py-10 \">\n//         <div className=\"bg-white w-96 h-auto border border-gray-200 rounded-md\">\n//           <h1 className=\"text-center pt-4 text-[#0c2650] text-lg font-bold\">\n//             Sign up\n//           </h1>\n//           {message && (\n//             <div className=\"px-11 py-4\">\n//               <div className=\"font-bold bg-gradient-to-r from-fuchsia-400 via-sky-400 to-violet-200 p-4  text-center text-white \">\n//                 {message}\n//               </div>\n//             </div>\n//           )}\n\n//           <div className=\"pl-8\">\n//             <form onSubmit={handleSubmit(onSubmit)}>\n//               <div className=\"text-sm\">First Name</div>\n//               <div class=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span class=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <svg\n//                     fill=\"none\"\n//                     stroke=\"currentColor\"\n//                     stroke-linecap=\"round\"\n//                     stroke-linejoin=\"round\"\n//                     stroke-width=\"2\"\n//                     viewBox=\"0 0 24 24\"\n//                     className=\"w-4 h-4\"\n//                   >\n//                     <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                   </svg>\n//                 </span>\n//                 <input\n//                   type=\"text\"\n//                   name=\"first_name\"\n//                   class=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your first name\"\n//                   autoComplete=\"on\"\n//                   {...register(\"first_name\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.first_name && errors.first_name.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       First Name is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Last Name:</div>\n//               <div class=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span class=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     class=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"text\"\n//                   name=\"last_name\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your last name\"\n//                   autoComplete=\"on\"\n//                   {...register(\"last_name\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.last_name && errors.last_name.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Last Name is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Email:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your Email Address\"\n//                   autoComplete=\"on\"\n//                   {...register(\"email\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.email && errors.email.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Email is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"pt-6 text-sm\">Password:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       class=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your password\"\n//                   autoComplete=\"on\"\n//                   {...register(\"password\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.password && errors.password.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Password is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n\n//               <div className=\"pt-6 text-sm\">Phone No:</div>\n//               <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n//                 <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"p-1 focus:outline-none focus:shadow-outline\"\n//                   >\n//                     <svg\n//                       fill=\"none\"\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       viewBox=\"0 0 24 24\"\n//                       className=\"w-4 h-4\"\n//                     >\n//                       <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n//                     </svg>\n//                   </button>\n//                 </span>\n//                 <input\n//                   type=\"number\"\n//                   name=\"phone\"\n//                   className=\"py-2 border-b-2 text-sm rounded-md pl-10 focus:outline-none w-10/12 focus:bg-white focus:text-gray-900\"\n//                   placeholder=\"Enter your phone number\"\n//                   autoComplete=\"on\"\n//                   {...register(\"phone\", {\n//                     required: true,\n//                   })}\n//                 />\n//                 <div>\n//                   {errors.phone && errors.phone.type === \"required\" && (\n//                     <span\n//                       role=\"alert\"\n//                       className=\"text-red-600 text-[10px] italic\"\n//                     >\n//                       Phone No is required\n//                     </span>\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"py-6 px-6\">\n//                 <button\n//                   className={`w-full ${\n//                     loading ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-blue-700 \"\n//                   } text-white font-bold py-2 px-4 rounded`}\n//                   disabled={loading ? true : false}\n//                 >\n//                   {loading ? \"Loading...\" : \"Sign up\"}\n//                 </button>\n//                 <div className=\"text-center text-sm pt-1\">\n//                   Already have an account? <Link to=\"login\">Login</Link>\n//                 </div>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\n"]},"metadata":{},"sourceType":"module"}